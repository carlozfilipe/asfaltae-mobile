{"version":3,"sources":["../../src/entity-schema/EntitySchemaEmbeddedError.ts"],"names":[],"mappings":";;;;AAAA,kCAAwC;AAExC;IAA+C,0DAAY;IASvD,mCAAY,OAAe;eACvB,kBAAM,OAAO,CAAC;IAClB,CAAC;IAVM,+DAAqC,GAA5C,UAA6C,KAAa;QACtD,OAAO,IAAI,yBAAyB,CAAC,uCAAgC,KAAK,oBAAiB,CAAC,CAAC;IACjG,CAAC;IAEM,gDAAsB,GAA7B,UAA8B,KAAa;QACvC,OAAO,IAAI,yBAAyB,CAAC,uCAAgC,KAAK,2BAAwB,CAAC,CAAC;IACxG,CAAC;IAKL,gCAAC;AAAD,CAZA,AAYC,CAZ8C,oBAAY,GAY1D;AAZY,8DAAyB","file":"EntitySchemaEmbeddedError.js","sourcesContent":["import { TypeORMError } from \"../error\";\n\nexport class EntitySchemaEmbeddedError extends TypeORMError {\n    static createEntitySchemaIsRequiredException(field: string): EntitySchemaEmbeddedError {\n        return new EntitySchemaEmbeddedError(`EntitySchema is required for ${field} embedded field`);\n    }\n\n    static createTargetIsRequired(field: string): EntitySchemaEmbeddedError {\n        return new EntitySchemaEmbeddedError(`Target field is required for ${field} embedded EntitySchema`);\n    }\n\n    constructor(message: string) {\n        super(message);\n    }\n}\n"],"sourceRoot":".."}