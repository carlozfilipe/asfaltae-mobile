{"version":3,"sources":["../browser/src/util/PathUtils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAErC,IAAM,mBAAmB,GAAG,iBAAiB,CAAC;AAC9C,IAAM,uBAAuB,GAAG,mBAAmB,CAAC;AAEpD,MAAM,UAAU,cAAc,CAAC,QAAgB;IAC7C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO;QAC9B,OAAO,QAAQ,CAAC;IAElB,IAAI,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACrC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;SACrD,IAAI,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC;QAC9C,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,uBAAuB,EAAE,UAAC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAK,OAAA,eAAQ,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,SAAG,EAAE,CAAE,EAAhC,CAAgC,CAAC,CAAC;IAE5G,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,cAAc,CAAC,QAAgB;IAC7C,IAAM,IAAI,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;IACpD,OAAO,IAAI,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;AAClC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,UAAU,CAAC,QAAgB;IACzC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;AACpD,CAAC","file":"PathUtils.js","sourcesContent":["import { hash } from \"./StringUtils\";\n\nconst WINDOWS_PATH_REGEXP = /^([a-zA-Z]:.*)$/;\nconst UNC_WINDOWS_PATH_REGEXP = /^\\\\\\\\(\\.\\\\)?(.*)$/;\n\nexport function toPortablePath(filepath: string): string {\n  if (process.platform !== `win32`)\n    return filepath;\n\n  if (filepath.match(WINDOWS_PATH_REGEXP))\n    filepath = filepath.replace(WINDOWS_PATH_REGEXP, `/$1`);\n  else if (filepath.match(UNC_WINDOWS_PATH_REGEXP))\n    filepath = filepath.replace(UNC_WINDOWS_PATH_REGEXP, (match, p1, p2) => `/unc/${p1 ? `.dot/` : ``}${p2}`);\n\n  return filepath.replace(/\\\\/g, `/`);\n}\n\n/**\n * Create deterministic valid database name (class, database) of fixed length from any filepath. Equivalent paths for windows/posix systems should\n * be equivalent to enable portability\n */\nexport function filepathToName(filepath: string): string {\n  const uniq = toPortablePath(filepath).toLowerCase();\n  return hash(uniq, {length: 63});\n}\n\n/**\n * Cross platform isAbsolute\n */\nexport function isAbsolute(filepath: string): boolean {\n  return !!filepath.match(/^(?:[a-z]:|[\\\\]|[\\/])/i);\n}\n"],"sourceRoot":".."}